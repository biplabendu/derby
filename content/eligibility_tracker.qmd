---
title: "HARD Eligibility Tracker"
reference-location: margin
citation-location: margin
editor_options: 
  chunk_output_type: console
comments:
  hypothesis: true
---


```{r}
library(dplyr)
library(ggplot2)
source(here::here("./functions/utils.R"))

# Load google sheets ----------------------------------------------------------
# links <- c(
#   practice = "https://docs.google.com/spreadsheets/d/1mJuAuvHl95e39-0kdC1c_JkiB7lsaWw0O8UnnQobMN0",
#   volunteer = "https://docs.google.com/spreadsheets/d/149v3bE1N_0GNkyiTo4eFn-DCsJ1xDUolFQ9V3komxRM"
# )

links <- c(
  practice = "https://docs.google.com/spreadsheets/d/e/2PACX-1vThN94KzaEV4gk9lICkn7HnOJTAPtTDQuDypir_pxXMzwi7oGxgBbM21gVx6vjHoz-KZV2Jl0kHIhvm/pub?gid=1819256109&single=true&output=csv",
  volunteer = "https://docs.google.com/spreadsheets/d/e/2PACX-1vRKuh5MOL8VJi3VD_WtbbLVyH8O9rbjhkKYWET8IlUib_NBhSUW_jRVA7bZR18K8cSgmPcADy2ESaAa/pub?gid=845902717&single=true&output=csv"
)

# sheets <- c(
#   2,
#   1
# )

```



```{r}

# Load data

dat <-  purrr::map(
  links,
  # sheets,
  # ~ googlesheets4::read_sheet(
  #   .x,
  #   sheet = .y
  # ) |> 
  ~ read.csv(
    .x
  ) |> 
    janitor::clean_names()
  ) |> 
  setNames(
    names(links)
  )
  
# dat[["practice"]] |> 
#   glimpse()
# 
# dat[["volunteer"]] |>
#   glimpse()
```


```{r}
# Subset

## Practice hours

tdat <- list()

tdat[["practice"]] <- dat[["practice"]] |>
# dat[["practice"]] |> 
  as_tibble() |> 
  select(
    timestamp,
    p_date = practice_date,
    p_type = practice_type,
    off_skates,
    in_attendance,
    duration_pop = how_long_was_your_pop_up,
    duration_osw = how_long_did_you_work_out
  ) |>
  mutate(
    across(
      everything(),
      ~ if_else(
          .x == "",
          NA,
          .x
        )
    )
  ) |> 
  mutate(
    timestamp = lubridate::mdy_hms(timestamp) |>
      lubridate::as_date(),
    p_date = lubridate::mdy(p_date),
    p_type = tolower(p_type)
  ) |> 
  filter(
    p_date >= lubridate::ymd(
      "2024-06-22"
    )
  ) |>
  mutate(
    p_type2 = case_when(
      stringr::str_detect(p_type, "\\(bw\\)") ~ "bw",
      stringr::str_detect(p_type, "\\(di\\)") ~ "di",
      stringr::str_detect(p_type, "\\(fmc\\)") ~ "fmc",
      stringr::str_detect(p_type, "\\(lge\\)") ~ "lge",
      stringr::str_detect(p_type, "\\(lm\\)") ~ "lm",
      stringr::str_detect(p_type, "\\(osw\\)") ~ "osw",
      stringr::str_detect(p_type, "\\(po\\)") ~ "pop",
      stringr::str_detect(p_type, "\\(star\\)") ~ "star",
      .default = "Uncategorized"
    ),
    .after = p_type
  ) |> 
  mutate(
    error = if_else(
      lubridate::year(timestamp) != lubridate::year(p_date),
      TRUE,
      FALSE
    ),
    .before = 1
  )
```

## Errors that needs fix

```{r}

tdat[["practice"]] |> 
  filter(
    error
  ) |> 
  select(
    timestamp,
    practice_date = p_date
  ) |> 
  left_join(
    dat[["practice"]] |> 
      select(
        1:4, 6
      ) |> 
      mutate(
        row_number = 1:n()
      ) |> 
      mutate(
        timestamp = lubridate::mdy_hms(timestamp) |>
          lubridate::as_date(),
        practice_date = lubridate::mdy(practice_date)
      ),
    join_by(
      timestamp,
      practice_date
    )
  ) |> 
  relocate(
    row_number,
    .before = 1
  ) |> 
  kableExtra::kable()
```

> Removing the rows with error from the data.

# Practice Credit

```{r}
foo <- tdat[["practice"]] |>
  filter(
    error == FALSE
  ) |> 
  select(
    - error
  ) |>
  tidyr::unite(
    "player",
    c(off_skates, in_attendance),
    sep = ", ",
    remove = FALSE
  ) |>  
  tidyr::separate_longer_delim(
    player,
    delim = ", "
  ) |>
  filter(
    player != "NA"
  ) |> 
  select(
    - in_attendance,
    - off_skates
  ) |> 
  rowwise() |> 
  mutate(
    across(
      matches("^duration"),
      ~ case_when(
        is.na(.) ~ 0,
        .default = readr::parse_number(.)
      ),
      .names = "new_{.col}"
    ),
    new_duration_osw = if_else(
      is.na(new_duration_osw) &
        stringr::str_detect(
            duration_osw, 
            "hr|hour"
          ),
      1,
      new_duration_osw
    ),
    new_duration_pop = if_else(
      is.na(new_duration_pop) &
        stringr::str_detect(
            duration_pop, 
            "hr|hour"
          ),
      1,
      new_duration_pop
    ),
  ) |> 
  select(
    player,
    timestamp,
    p_type2,
    p_type,
    dur_pop = new_duration_pop,
    dur_osw = new_duration_osw
  ) |> 
  mutate(
    credit_pop = 1*dur_pop,
    credit_osw = 0.5*dur_osw,
    credit_other = case_when(
      p_type2 == "lge" ~ 1,
      p_type2 == "star" ~ 1,
      p_type2 == "lm" ~ 1,
      p_type2 == "di" ~ 1,
      p_type2 == "bw" ~ 1,
      p_type2 == "fmc" ~ 1,
      .default = 0
    )
  )

bar <- foo |> 
  # mutate_all(as.factor) |> summary()
  mutate(
    credit_total = rowSums(
      across(
        matches("credit")
      )
    )
  ) |> 
  mutate(
    player = tolower(trimws(player)),
    player = case_when(
      stringr::str_detect(player, "mini") ~ "mini fridge",
      stringr::str_detect(player, "toxic") ~ "gin n. toxic",
      stringr::str_detect(player, "beaver") ~ "eager beaver",
      .default = player
    )
  ) |> 
  group_by(
    player
  ) |> 
  reframe(
    credit_current = sum(credit_total)
  ) |> 
  arrange(
    desc(credit_current)
  ) |> 
  mutate(
    credit_reqd = 11,
    perc_completed = round(
      credit_current/credit_reqd*100,
      0
    ) |> 
      paste(" %")
  )

bar |> 
  DT::datatable()
```

## Plot

```{r fig.width=5, fig.height=7}
o_players = bar |> arrange(credit_current) |> pull(player)

bar |> 
  mutate(
    player = factor(
      player,
      levels = o_players
    )
  ) |> 
  ggplot(
    aes(x = player, y = credit_current)
  ) +
  geom_histogram(
    stat = "identity",
    fill = "yellow",
    col = "black"
  ) +
  geom_hline(
    yintercept = 5.5,
    col = "grey30",
    alpha = .8,
    lty = 2
  ) +
  labs(
    title = "Practice credits",
    x = "",
    y = "Credits after 6/22/2024"
  ) +
  coord_flip() +
  theme_minimal(16)
```

